#!/bin/bash

version=0.0.2

real_grep=$(which -a grep | tail -1 | awk '{ print $1 }')

usage()
{
cat << EOF

    Usage: $0 [options] [path]

    List the node modules and their versions for a given path (defaulting to
    the current working directory).

    OPTIONS:

      -h    Show this message
      -V    Show version
      -j    Format the output as a JSON snippet for inclusion in a package.json
            file

EOF
}

pkg_format="%s@%s"
output_format="\n%s"
trailing_comma=0

while getopts "hVj" option
do
    case $option in
        h)
            usage
            exit 1
            ;;
        V)
            echo "version $version"
            exit 1
            ;;
        j)
            pkg_format='"%s": "%s"'
            output_format="\n%s,"
            trailing_comma=1
            shift
            ;;
        ?)
            usage
            exit 2
            ;;
    esac
done

find_base_path=${1:-.}

pkg_files=$(find "$find_base_path"/node_modules -maxdepth 2 -name "package.json")
declare -a pkgs

for f in $pkg_files
do
    pkg=$(basename $(dirname $f))
    ver=$($real_grep -e '"version"\s*:\s*' $f | $real_grep -v "readme" | sed 's/^.*"version"[^:]*:[^"]*"\([^"]\{1,\}\)".*$/\1/')

    printf -v str "$pkg_format" "$pkg" "$ver"

    pkgs=("${pkgs[@]}" "$str")
done

output="$( printf "$output_format" "${pkgs[@]}" | sort )"
len="$(( ${#output} - 1 - $trailing_comma ))"

echo "${output:1:$len}"
